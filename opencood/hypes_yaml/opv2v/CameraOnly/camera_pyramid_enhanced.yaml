name: mydataset_HeterBaseline_opv2v_camera_pyramid_enhanced
# root_dir: "dataset/OPV2V/train"
# validate_dir: "dataset/OPV2V/validate"
# test_dir: "dataset/OPV2V/test"

root_dir: "dataset/mydataset_OPV2V_h50_seg_cam_lidar/train"
validate_dir: "dataset/mydataset_OPV2V_h50_seg_cam_lidar/validate"
test_dir: "dataset/mydataset_OPV2V_h50_seg_cam_lidar/test"

yaml_parser: "load_general_params"
train_params:
  batch_size: &batch_size 1  # 固定为1，适配显存限制
  epoches: 30
  eval_freq: 2
  save_freq: 2
  max_cav: 5

comm_range: 70
input_source: ['camera']  # 只使用camera，注释掉depth因为数据集无此信息
# input_source: ['camera', 'depth']  # 从STAMP借鉴，增加深度输入源
label_type: 'camera'
cav_lidar_range: &cav_lidar [-51.2, -51.2, -2, 51.2, 51.2, 2]

add_data_extension: ['bev_visibility.png']  # 从STAMP借鉴，启用BEV可视化

heter:
  assignment_path: "opencood/logs/heter_modality_assign/opv2v_4modality.json" 
  ego_modality: &ego_modality "m2"
  mapping_dict:
    m1: m2
    m2: m2
    m3: m2
    m4: m2
  modality_setting:
    m2:
      sensor_type: &sensor_type_m2 'camera'
      core_method: &core_method_m2 "lift_splat_shoot"

      grid_conf: &grid_conf_m2
        xbound: [-51.2, 51.2, 0.4]
        ybound: [-51.2, 51.2, 0.4]
        zbound: [-10, 10, 20.0]
        ddiscr: [2, 50, 48]
        mode: 'LID'
      data_aug_conf: &data_aug_conf_m2
        resize_lim: [0.65, 0.7]
        final_dim: [384, 512]
        rot_lim: [-3.6, 3.6]
        H: 600
        W: 800
        rand_flip: False
        bot_pct_lim: [0.0, 0.05]
        cams: ['camera0', 'camera1', 'camera2', 'camera3']
        Ncams: 4


fusion:
  core_method: 'intermediateheter'
  dataset: 'opv2v'
  args: 
    proj_first: false
    grid_conf: None
    data_aug_conf: None


preprocess:
  core_method: 'SpVoxelPreprocessor'
  args:
    voxel_size: [0.4, 0.4, 4]
    max_points_per_voxel: 1
    max_voxel_train: 1
    max_voxel_test: 1
  cav_lidar_range: *cav_lidar

postprocess:
  core_method: 'VoxelPostprocessor'
  gt_range: *cav_lidar
  anchor_args:
    cav_lidar_range: *cav_lidar
    l: 3.9
    w: 1.6
    h: 1.56
    r: &anchor_yaw [0, 90]
    feature_stride: 2
    num: &anchor_num 2
  target_args:
    pos_threshold: 0.6
    neg_threshold: 0.45
    score_threshold: 0.2  # STAMP验证过的有效阈值
  order: 'hwl'
  max_num: 150
  nms_thresh: 0.15
  dir_args: &dir_args
    dir_offset: 0.7853
    num_bins: 2
    anchor_yaw: *anchor_yaw

# model related - 增强的HEAL架构，融合STAMP改进
model:
  core_method: heter_pyramid_collab  # 保持HEAL核心方法
  args:
    lidar_range: *cav_lidar
    supervise_single: true

    m2:
      core_method: *core_method_m2
      sensor_type: *sensor_type_m2

      encoder_args:
        anchor_number: *anchor_num
        grid_conf: *grid_conf_m2
        data_aug_conf: *data_aug_conf_m2
        img_downsample: 8
        img_features: &img_feature 128
        use_depth_gt: false
        depth_supervision: false  # 禁用depth supervision，数据集无depth信息
        camera_encoder: EfficientNet  # 与STAMP m1一致的编码器

      camera_mask_args:
        cav_lidar_range: *cav_lidar
        grid_conf: *grid_conf_m2

      backbone_args:
        layer_nums: [3]
        layer_strides: [2]
        num_filters: [64]
        inplanes: 128

      aligner_args:
        core_method: identity

    # 保持HEAL的全局融合架构，但应用STAMP的参数优化
    fusion_backbone: 
      resnext: true
      layer_nums: [3, 5, 8]
      layer_strides: [1, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [1, 2, 4]
      num_upsample_filter: [128, 128, 128]
      anchor_number: *anchor_num

    shrink_header: 
      kernal_size: [ 3 ]
      stride: [ 1 ]
      padding: [ 1 ]
      dim: [ 256 ]
      input_dim: 384 # 128 * 3

    in_head: 256
    anchor_number: *anchor_num
    dir_args: *dir_args

    # 从STAMP借鉴的特征压缩机制（可选）
    # compressor:
    #   input_dim: 128
    #   compress_ratio: 0.5

loss:
  core_method: point_pillar_pyramid_loss
  args:
    pos_cls_weight: 2.0
    cls:
      type: 'SigmoidFocalLoss'
      alpha: 0.25
      gamma: 2.0
      weight: 1.0
    reg:
      type: 'WeightedSmoothL1Loss'
      sigma: 3.0
      codewise: true
      weight: 2.0
    dir:
      type: 'WeightedSoftmaxClassificationLoss'
      weight: 0.2
      args: *dir_args
    # depth:
    #   weight: 1.0  # 注释掉深度损失权重，数据集无depth信息
    pyramid:
      relative_downsample: [1, 2, 4]
      weight: [0.4, 0.2, 0.1]  # STAMP验证的金字塔损失权重


optimizer:
  core_method: Adam
  lr: 0.002
  args:
    eps: 1e-10
    weight_decay: 1e-4

lr_scheduler:
  core_method: multistep
  gamma: 0.1
  step_size: [15, 25]  # STAMP的学习率调度策略
